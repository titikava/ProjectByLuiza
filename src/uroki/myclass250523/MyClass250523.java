package uroki.myclass250523;


/*---------------СОРТИРОВКА СПИСКА------------
Для управления информацией в различных типах коллекций java API предоставляет класс Collections. Который включен в пакет
java.util. Наиболее популярным методом класса Collections является метод sort() который сортирует элементы списка.
Методы в классе Collections являются статическими, поэтому не нужна объявлять объект класса Collections. Если
используется String в ArrayList тогда будут отсортированы в алфавитном порядке, если числа, то от меньшего к большему.
Другие полезные методы класса Collections:
1. max(Collection c) - возвращает максимальный элемент в списке
2. min(Collection c) - возвращает минимальный элемент в списке
3. reverse(List list) - реверсивно меняет послеовательнось в списке
4. shuffle(List list) - перемешивает элементы в списке

-------------------------------------------------ИТЕРАТОРЫ-----------------------------------
Iterator - это объект, который позволяет циклично проходить через коллекцию. Получать или удалять элементы. До того, как
вы получите доступ к коллекции вы должны получить сам Iterator. Каждый класс коллекции предоставляет метод iterator(),
который возвращает итератор к началу коллекции. Используя этот объект итератора вы можете получить доступ к каждому
элементу коллекции по одному элементу за раз. Класс Iterator предоставляет следующие методы:
1. hasNext() - возвращает булевое значение. Возвращает true если есть следующий элемент.
2. next() - возвращает следующий объект и перемещает итератор.
3. remove() - удаляет последний объект, который был возвращен из коллекции методом next()

Обычно итератор используется в циклах. При каждой итерации вы можете получить доступ к соответтствующему элементу списка
* */

import java.util.Arrays;
import java.util.Iterator;
import java.util.LinkedList;

public class MyClass250523 {

    public static void main(String[] args) {
        LinkedList<String> animals = new LinkedList<>(Arrays.asList("Fox", "Cat", "Dog", "Crocodile", "Elephant", "Snake"));
        Iterator<String> it = animals.iterator();
//        System.out.println(it.next());
//        System.out.println(it.next());
//        System.out.println(it.hasNext());
        while (it.hasNext()) {
            System.out.println(it.next());
        }
    }
}
